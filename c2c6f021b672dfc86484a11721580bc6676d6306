{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "85bb3f83_85ba4235",
        "filename": "multi-primary/globalrefdb.groovy",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-06-14T11:31:52Z",
      "side": 1,
      "message": "eCan use logical short circuiting: [1] and avoid the check for subsequent refs if it\u0027s already known, that some refs are out of date? E.g.:\n\n```\n    upToDate \u003d upToDate \u0026\u0026 checkRef(projectName, repo, ref)\n```\n\nOr is the check still useful to be verbose and log the outdated refs?\nIn which case you could leave a comment, that it\u0027s not optimized?\n\n[1]: https://docs.groovy-lang.org/latest/html/documentation/core-operators.html#_short_circuiting",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 86,
        "endChar": 46
      },
      "revId": "c2c6f021b672dfc86484a11721580bc6676d6306",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d6839b_7cd9d3a4",
        "filename": "multi-primary/globalrefdb.groovy",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-06-14T11:47:51Z",
      "side": 1,
      "message": "I would say that better would be to increase it every time when ref is not up to date so that it is known how many was no up to date. WDYT Luca?",
      "parentUuid": "85bb3f83_85ba4235",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 86,
        "endChar": 46
      },
      "revId": "c2c6f021b672dfc86484a11721580bc6676d6306",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb3013d6_18e4ed32",
        "filename": "multi-primary/globalrefdb.groovy",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-14T12:26:25Z",
      "side": 1,
      "message": "Realistically, you\u0027d be interested in which refs are out of date rather than how many. I believe it still logs the out of date refs, could simply pipe to `wc -l` if the user really wants too?",
      "parentUuid": "f5d6839b_7cd9d3a4",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 86,
        "endChar": 46
      },
      "revId": "c2c6f021b672dfc86484a11721580bc6676d6306",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7548fe6_40f3a3a2",
        "filename": "multi-primary/globalrefdb.groovy",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-06-14T12:41:13Z",
      "side": 1,
      "message": "\u003e Realistically, you\u0027d be interested in which refs are out of date rather than how many. I believe it still logs the out of date refs, could simply pipe to `wc -l` if the user really wants too?\n\nYes, that was the point. We want to display *ALL* the ones out of date, that\u0027s why we do not want to short circuit.",
      "parentUuid": "cb3013d6_18e4ed32",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 86,
        "endChar": 46
      },
      "revId": "c2c6f021b672dfc86484a11721580bc6676d6306",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}