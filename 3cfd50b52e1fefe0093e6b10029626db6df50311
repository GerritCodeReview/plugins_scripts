{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e490b26d_0f5b84da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-23T22:08:43Z",
      "side": 1,
      "message": "What if the cache is cleared? Should that also trigger the update of the install timestamp?",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6494cc8_776dc981",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-24T21:36:12Z",
      "side": 1,
      "message": "I think clearing the cache should also update the `install_timestamp.txt` if it doesn\u0027t, all accounts will be disabled.\n\nSimilarly, when the plugin is disabled or temporarily uninstalled, the `install_timestamp.txt` should be updated.\n\nUnfortunately, I don\u0027t think there\u0027s any API that we can leverage to automate clearing `install_timestamp.txt` in the above situations. The only thing I can think of is to document this in the readme file. WDYT?",
      "parentUuid": "e490b26d_0f5b84da",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58fede61_73358541",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-30T20:11:33Z",
      "side": 1,
      "message": "OK with documenting the risk. I would stay that the file should always be removed if:\n- Removing or clearing the cache\n- Performing any upgrade that could wipe out caches",
      "parentUuid": "c6494cc8_776dc981",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77e2706b_4dd9285b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-30T20:23:51Z",
      "side": 1,
      "message": "I\u0027ve added note to the documentation about this.",
      "parentUuid": "58fede61_73358541",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43f86d16_1adfc328",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2024-05-07T09:59:32Z",
      "side": 1,
      "message": "I agree, that is super risky. If for any reason cache will be cleared all accounts will be disabled. Then restoring them to active state will be super difficult(we don\u0027t have script for that) so in practice we can cause a full outage.\n\nMaybe we can try different approach, for example to register `CacheRemovalListener`[1].\nWe could try:\n1. When the groovy script is loaded/reloaded. Populate all active accounts to the cache.\n2. React when account is removed from the cache due to expiration. `RemovalNotification` has the `getCause` method which can distinguish expiration from the manual cache cleanup.\n\nWith this approach we do not have to store any information in the local file and we can mitigate the risk when someone clear the cache\n\n1. Example of the `CacheRemovalListener` implementation: \nhttps://gerrit.googlesource.com/plugins/multi-site/+/refs/heads/master/src/main/java/com/googlesource/gerrit/plugins/multisite/cache/CacheEvictionHandler.java",
      "parentUuid": "77e2706b_4dd9285b",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1aec7c2_b1628991",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-05-09T20:49:20Z",
      "side": 1,
      "message": "\u003e With this approach we do not have to store any information in the local file and we can mitigate the risk when someone clear the cache\n\nNope, we still need to store the information that we \"loaded all users\" into the cache _somewhere_. As each Gerrit restart or plugin reload will refill the cache with all active accounts, and postpone account disablement plus scew the number of active accounts, which was the initial purpose of this script.\n\nThis then brings the case \"what when someone removes that file marker?\". The outcomes of is are less severe, but still would cause the script to not work as expected.",
      "parentUuid": "43f86d16_1adfc328",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "369c36ac_6dad7d19",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-23T14:52:21Z",
      "side": 1,
      "message": "We typically use wildcards imports in Groovy scripts.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77848ebd_d2be126a",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-24T21:36:12Z",
      "side": 1,
      "message": "This is intentional, as there\u0027s ambiguity with `PluginData` name, as one is an annotation and there\u0027s also `com.google.gerrit.common.PluginData`, for this reason, we need exact imports.",
      "parentUuid": "369c36ac_6dad7d19",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2049448a_e49c9e9b",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-23T22:08:43Z",
      "side": 1,
      "message": "This looks a filtering operation, have you thought about using the Groovy\u0027s `findAll`?\n\nThe result is way smaller and more functional / readable IMHO.\n\n\n```suggestion\n      def accountsToDisable \u003d allActiveAccounts.findAll( accountState -\u003e {\n          trackActiveUsersCache.getIfPresent(accountState.account().id().get())\n      }\n```",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 182,
        "endChar": 7
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc53822b_15432c07",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 182,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-24T21:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2049448a_e49c9e9b",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 182,
        "endChar": 7
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc5961b1_2cac0ec3",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-23T22:08:43Z",
      "side": 1,
      "message": "I am concerned that service accounts that aren\u0027t logging in interactively could also be disabled.\n\nE.g. the owners plugin uses an account id just for its own internal user, but that user will never login interactively.\n\nShould we exclude from the account to disable:\n- Service Users\n- Other \"allow-list\" groups of users?\n\nWDYT?",
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c6ed11_f5d0eaaa",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-24T21:36:12Z",
      "side": 1,
      "message": "Sure, makes sense, for the _Service Users_ we can check the group memberships for an account.\n\nWith the \"allow-list\", I\u0027d say it\u0027s a separate feature for this script and would definitely implement it after this is merged.\n\nI\u0027m on the fence about the _Service Users_ check, if should be part of this one or not. I\u0027m leaning more toward implementing that in a follow-up change, as this review is already taking a long time. Let\u0027s get something in, then we can improve.\n\nWDYT?",
      "parentUuid": "bc5961b1_2cac0ec3",
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f7e8908_981568a2",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-30T20:11:33Z",
      "side": 1,
      "message": "Yep, a follow-up would do.",
      "parentUuid": "b1c6ed11_f5d0eaaa",
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d5ad4c3_8b369076",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-30T20:33:12Z",
      "side": 1,
      "message": "created:\n* https://issues.gerritcodereview.com/issues/338071090\n* https://issues.gerritcodereview.com/issues/338071091",
      "parentUuid": "4f7e8908_981568a2",
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01557e53_b912fe56",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-23T22:08:43Z",
      "side": 1,
      "message": "Have you considered using the Groovy\u0027s `each`?\n\n\n```suggestion\n        accountsToDisable.each(disableAccount(it))\n```",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 187,
        "endChar": 9
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6942f4d8_eb019cfb",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-24T21:36:12Z",
      "side": 1,
      "message": "I\u0027m not fond of `each` as it inherently introduces a side-effect and prefer the imperative approach. But, sure, can change this to `each`.",
      "parentUuid": "01557e53_b912fe56",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 187,
        "endChar": 9
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0360b6bb_f5a847b8",
        "filename": "admin/track-and-disable-inactive-users.groovy",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-30T20:11:33Z",
      "side": 1,
      "message": "\u003e I\u0027m not fond of `each` as it inherently introduces a side-effect and prefer the imperative approach. But, sure, can change this to `each`.",
      "parentUuid": "6942f4d8_eb019cfb",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 187,
        "endChar": 9
      },
      "revId": "3cfd50b52e1fefe0093e6b10029626db6df50311",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}